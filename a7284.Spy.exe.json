{"data": {"CAPA": {"tactics": [{"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1082", "name": "System Information Discovery", "link": "https://attack.mitre.org/techniques/T1082/", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). On ESXi servers, threat actors may gather system information from various esxcli utilities, such as system hostname get, system version get, and storage filesystem list (to list storage volumes).\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.\nSystem Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment. ", "signatures": [{"severity": "INFO", "description": "get OS version in .NET"}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1620", "name": "Reflective Code Loading", "link": "https://attack.mitre.org/techniques/T1620/", "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., Shared Modules).\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode). For example, the Assembly.Load() method executed by PowerShell may be abused to load raw code into the running process.\nReflective code injection is very similar to Process Injection except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.", "signatures": [{"severity": "INFO", "description": "invoke .NET assembly method"}]}]}]}, "CAPE Sandbox": {"tactics": [{"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1082", "name": "System Information Discovery", "link": "https://attack.mitre.org/techniques/T1082/", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). On ESXi servers, threat actors may gather system information from various esxcli utilities, such as system hostname get, system version get, and storage filesystem list (to list storage volumes).\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.\nSystem Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment. ", "signatures": [{"severity": "UNKNOWN", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture."}]}]}, {"id": "TA0011", "name": "Command and Control", "link": "https://attack.mitre.org/tactics/TA0011/", "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.", "techniques": [{"id": "T1071", "name": "Application Layer Protocol", "link": "https://attack.mitre.org/techniques/T1071/", "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, DNS, or publishing/subscribing. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may communicate using application layer protocols to avoid detection/network filtering by blending in with existing traffic."}]}]}, {"id": "TA0002", "name": "Execution", "link": "https://attack.mitre.org/tactics/TA0002/", "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ", "techniques": [{"id": "T1106", "name": "Native API", "link": "https://attack.mitre.org/techniques/T1106/", "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes. These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to Command and Scripting Interpreter, the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\nNative API functions (such as NtCreateProcess) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries. For example, functions such as the Windows API CreateProcess() or GNU fork() will allow programs and scripts to start other processes. This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks. Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via Disable or Modify Tools.", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors."}]}]}, {"id": "TA0004", "name": "Privilege Escalation", "link": "https://attack.mitre.org/tactics/TA0004/", "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ", "techniques": [{"id": "T1055", "name": "Process Injection", "link": "https://attack.mitre.org/techniques/T1055/", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges."}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1055", "name": "Process Injection", "link": "https://attack.mitre.org/techniques/T1055/", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges."}]}, {"id": "T1027", "name": "Obfuscated Files or Information", "link": "https://attack.mitre.org/techniques/T1027/", "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit."}]}, {"id": "T1027.002", "name": "Software Packing", "link": "https://attack.mitre.org/techniques/T1027/002/", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ", "signatures": [{"severity": "UNKNOWN", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code."}]}]}]}, "Zenbox": {"tactics": [{"id": "TA0002", "name": "Execution", "link": "https://attack.mitre.org/tactics/TA0002/", "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ", "techniques": [{"id": "T1059", "name": "Command and Scripting Interpreter", "link": "https://attack.mitre.org/techniques/T1059/", "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of Unix Shell while Windows installations include the Windows Command Shell and PowerShell.\nThere are also cross-platform interpreters such as Python, as well as those commonly associated with client applications such as JavaScript and Visual Basic.\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in Initial Access payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various Remote Services in order to achieve remote Execution.", "signatures": [{"severity": "INFO", "description": "Sample may offer command line options, please run it with the command line option cookbook (it's possible that the command line switches require additional characters like)", "match_data": ["Move last5bindingNavigatorSeparator29AddNewRecordToolButton.Image-AddNewRecordToolButton"]}, {"severity": "INFO", "description": "Sample might require command line arguments, analyze it with the command line cookbook", "match_data": ["Move last5bindingNavigatorSeparator29AddNewRecordToolButton.Image-AddNewRecordToolButton"]}]}]}, {"id": "TA0003", "name": "Persistence", "link": "https://attack.mitre.org/tactics/TA0003/", "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "bcrypt.dll", "cryptsp.dll", "rsaenh.dll", "dwmapi.dll", "dwrite.dll", "windowscodecs.dll", "wldp.dll", "amsi.dll", "userenv.dll", "gpapi.dll", "iconcodecservice.dll", "wininet.dll", "ieframe.dll", "iertutil.dll", "netapi32.dll", "winhttp.dll", "netutils.dll", "wkscli.dll", "secur32.dll", "mlang.dll", "propsys.dll", "mozglue.dll", "winmm.dll", "wsock32.dll", "vcruntime140.dll", "winmmbase.dll", "dbghelp.dll", "msvcp140.dll", "winsqlite3.dll", "vaultcli.dll", "wintypes.dll", "dpapi.dll", "mswsock.dll", "dnsapi.dll", "iphlpapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "winnsi.dll", "rasadhlp.dll", "fwpuclnt.dll"]}]}]}, {"id": "TA0004", "name": "Privilege Escalation", "link": "https://attack.mitre.org/tactics/TA0004/", "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "bcrypt.dll", "cryptsp.dll", "rsaenh.dll", "dwmapi.dll", "dwrite.dll", "windowscodecs.dll", "wldp.dll", "amsi.dll", "userenv.dll", "gpapi.dll", "iconcodecservice.dll", "wininet.dll", "ieframe.dll", "iertutil.dll", "netapi32.dll", "winhttp.dll", "netutils.dll", "wkscli.dll", "secur32.dll", "mlang.dll", "propsys.dll", "mozglue.dll", "winmm.dll", "wsock32.dll", "vcruntime140.dll", "winmmbase.dll", "dbghelp.dll", "msvcp140.dll", "winsqlite3.dll", "vaultcli.dll", "wintypes.dll", "dpapi.dll", "mswsock.dll", "dnsapi.dll", "iphlpapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "winnsi.dll", "rasadhlp.dll", "fwpuclnt.dll"]}]}, {"id": "T1055", "name": "Process Injection", "link": "https://attack.mitre.org/techniques/T1055/", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "signatures": [{"severity": "LOW", "description": "Injects a PE file into a foreign processes", "match_data": ["C:\\Users\\user\\Desktop\\program.exe base: 400000 value starts with: 4D5A", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: execute and read and write", "NULL target: C:\\Windows\\SysWOW64\\grpconv.exe protection: execute and read and write", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: read write", "target process: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe", "Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$"]}, {"severity": "LOW", "description": "Maps a DLL or memory area into another process", "match_data": ["C:\\Users\\user\\Desktop\\program.exe base: 400000 value starts with: 4D5A", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: execute and read and write", "NULL target: C:\\Windows\\SysWOW64\\grpconv.exe protection: execute and read and write", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: read write", "target process: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe", "Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$"]}, {"severity": "LOW", "description": "Queues an APC in another process (thread injection)", "match_data": ["C:\\Users\\user\\Desktop\\program.exe base: 400000 value starts with: 4D5A", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: execute and read and write", "NULL target: C:\\Windows\\SysWOW64\\grpconv.exe protection: execute and read and write", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: read write", "target process: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe", "Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$"]}, {"severity": "INFO", "description": "May try to detect the Windows Explorer process (often used for injection)", "match_data": ["C:\\Users\\user\\Desktop\\program.exe base: 400000 value starts with: 4D5A", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: execute and read and write", "NULL target: C:\\Windows\\SysWOW64\\grpconv.exe protection: execute and read and write", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: read write", "target process: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe", "Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$"]}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "bcrypt.dll", "cryptsp.dll", "rsaenh.dll", "dwmapi.dll", "dwrite.dll", "windowscodecs.dll", "wldp.dll", "amsi.dll", "userenv.dll", "gpapi.dll", "iconcodecservice.dll", "wininet.dll", "ieframe.dll", "iertutil.dll", "netapi32.dll", "winhttp.dll", "netutils.dll", "wkscli.dll", "secur32.dll", "mlang.dll", "propsys.dll", "mozglue.dll", "winmm.dll", "wsock32.dll", "vcruntime140.dll", "winmmbase.dll", "dbghelp.dll", "msvcp140.dll", "winsqlite3.dll", "vaultcli.dll", "wintypes.dll", "dpapi.dll", "mswsock.dll", "dnsapi.dll", "iphlpapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "winnsi.dll", "rasadhlp.dll", "fwpuclnt.dll"]}]}, {"id": "T1055", "name": "Process Injection", "link": "https://attack.mitre.org/techniques/T1055/", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "signatures": [{"severity": "LOW", "description": "Injects a PE file into a foreign processes", "match_data": ["C:\\Users\\user\\Desktop\\program.exe base: 400000 value starts with: 4D5A", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: execute and read and write", "NULL target: C:\\Windows\\SysWOW64\\grpconv.exe protection: execute and read and write", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: read write", "target process: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe", "Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$"]}, {"severity": "LOW", "description": "Maps a DLL or memory area into another process", "match_data": ["C:\\Users\\user\\Desktop\\program.exe base: 400000 value starts with: 4D5A", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: execute and read and write", "NULL target: C:\\Windows\\SysWOW64\\grpconv.exe protection: execute and read and write", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: read write", "target process: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe", "Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$"]}, {"severity": "LOW", "description": "Queues an APC in another process (thread injection)", "match_data": ["C:\\Users\\user\\Desktop\\program.exe base: 400000 value starts with: 4D5A", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: execute and read and write", "NULL target: C:\\Windows\\SysWOW64\\grpconv.exe protection: execute and read and write", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: read write", "target process: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe", "Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$"]}, {"severity": "INFO", "description": "May try to detect the Windows Explorer process (often used for injection)", "match_data": ["C:\\Users\\user\\Desktop\\program.exe base: 400000 value starts with: 4D5A", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: execute and read and write", "NULL target: C:\\Windows\\SysWOW64\\grpconv.exe protection: execute and read and write", "NULL target: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe protection: read write", "target process: C:\\Program Files (x86)\\HdXxGCHqmXIEWjtzaYFotfzTgtmHrlzprJUmkcwDRZCeAgneTdsZKuAx\\6MQ4MJLO.exe", "Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$"]}]}, {"id": "T1036", "name": "Masquerading", "link": "https://attack.mitre.org/techniques/T1036/", "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading.", "signatures": [{"severity": "INFO", "description": "Creates files inside the user directory", "match_data": ["C:\\Users\\user\\AppData\\Local\\Microsoft\\CLR_v4.0_32\\UsageLogs\\program.exe.log"]}]}, {"id": "T1562", "name": "Impair Defenses", "link": "https://attack.mitre.org/techniques/T1562/", "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\nAdversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out, preventing a system from shutting down, or disabling or modifying the update process. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components. These restrictions can further enable malicious operations as well as the continued propagation of incidents."}, {"id": "T1562.001", "name": "Disable or Modify Tools", "link": "https://attack.mitre.org/techniques/T1562/001/", "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. Alternatively, they may add new directories to an endpoint detection and response (EDR) tool\u2019s exclusion list, enabling them to hide malicious files via File/Path Exclusions.\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.", "signatures": [{"severity": "INFO", "description": "Creates guard pages, often used to prevent reverse engineering and debugging", "match_data": ["page read and write | page guard"]}]}, {"id": "T1497", "name": "Virtualization/Sandbox Evasion", "link": "https://attack.mitre.org/techniques/T1497/", "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.", "signatures": [{"severity": "INFO", "description": "Contains medium sleeps (>= 30s)", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Checks if the current process is being debugged", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Contains long sleeps (>= 3 min)", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "May sleep (evasive loops) to hinder dynamic analysis", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Allocates memory with a write watch (potentially for evading sandboxes)", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}]}, {"id": "T1027", "name": "Obfuscated Files or Information", "link": "https://attack.mitre.org/techniques/T1027/", "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ", "signatures": [{"severity": "INFO", "description": "Binary may include packed or crypted data", "match_data": ["section name: .text entropy: 7.717166499731142"]}]}, {"id": "T1027.002", "name": "Software Packing", "link": "https://attack.mitre.org/techniques/T1027/002/", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ", "signatures": [{"severity": "INFO", "description": "Binary may include packed or crypted data", "match_data": ["section name: .text entropy: 7.717166499731142", "Section: .text IMAGE_SCN_CNT_CODE, IMAGE_SCN_MEM_EXECUTE, IMAGE_SCN_MEM_READ"]}, {"severity": "INFO", "description": "PE file has an executable .text section which is very likely to contain packed code (zlib compression ratio < 0.3)", "match_data": ["section name: .text entropy: 7.717166499731142", "Section: .text IMAGE_SCN_CNT_CODE, IMAGE_SCN_MEM_EXECUTE, IMAGE_SCN_MEM_READ"]}]}]}, {"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1497", "name": "Virtualization/Sandbox Evasion", "link": "https://attack.mitre.org/techniques/T1497/", "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.", "signatures": [{"severity": "INFO", "description": "Contains medium sleeps (>= 30s)", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Checks if the current process is being debugged", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Contains long sleeps (>= 3 min)", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "May sleep (evasive loops) to hinder dynamic analysis", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Allocates memory with a write watch (potentially for evading sandboxes)", "match_data": ["delay time: 922337203685477", "DebugPort", "delay time: 922337203685477", "-922337203685477s >= -30000s", "-54000s >= -30000s", "-40000s >= -30000s", "B10000 memory reserve | memory write watch", "26E0000 memory reserve | memory write watch", "46E0000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "9D60000 memory reserve | memory write watch", "AD60000 memory reserve | memory write watch"]}]}, {"id": "T1518", "name": "Software Discovery", "link": "https://attack.mitre.org/techniques/T1518/", "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nSuch software may be deployed widely across the environment for configuration management or security reasons, such as Software Deployment Tools, and may allow adversaries broad access to infect devices or move laterally.\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation."}, {"id": "T1518.001", "name": "Security Software Discovery", "link": "https://attack.mitre.org/techniques/T1518/001/", "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize the Cloud API to discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.", "signatures": [{"severity": "INFO", "description": "Checks if the current process is being debugged", "match_data": ["DebugPort", "Hyper-V RAW%SystemRoot%\\system32\\mswsock.dll"]}, {"severity": "INFO", "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)", "match_data": ["DebugPort", "Hyper-V RAW%SystemRoot%\\system32\\mswsock.dll"]}]}, {"id": "T1057", "name": "Process Discovery", "link": "https://attack.mitre.org/techniques/T1057/", "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc. ESXi also supports use of the ps command, as well as esxcli system process list.\nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.", "signatures": [{"severity": "INFO", "description": "May try to detect the Windows Explorer process (often used for injection)", "match_data": ["Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$", "ProcessInformation"]}, {"severity": "INFO", "description": "Queries a list of all running processes", "match_data": ["Program Manager", "Shell_TrayWnd", "FSoftware\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\".lnk%HOMEDRIVE%%HOMEPATH%.pif%USERPROFILE%setup.iniprogman.groupsprogman.onlydesktop.groupsstartup.groupssendto.groupsrecentdocs.group", "Progman", "FileDescriptionWindows Progman Group Converterh$", "ProcessInformation"]}]}, {"id": "T1018", "name": "Remote System Discovery", "link": "https://attack.mitre.org/techniques/T1018/", "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  Ping, net view using Net, or, on ESXi servers, esxcli network diag ping.\nAdversaries may also analyze data from local host files (ex: C:\\Windows\\System32\\Drivers\\etc\\hosts or /etc/hosts) or other passive means (such as local Arp cache entries) in order to discover the presence of remote systems in an environment.\nAdversaries may also target discovery of network infrastructure as well as leverage Network Device CLI commands on network devices to gather detailed information about systems within a network (e.g. show cdp neighbors, show arp).  ", "signatures": [{"severity": "INFO", "description": "Reads the hosts file", "match_data": ["C:\\Windows\\System32\\drivers\\etc\\hosts"]}]}, {"id": "T1083", "name": "File and Directory Discovery", "link": "https://attack.mitre.org/techniques/T1083/", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).\nSome files and directories may require elevated or specific user permissions to access.", "signatures": [{"severity": "INFO", "description": "Reads ini files", "match_data": ["C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles.ini"]}]}, {"id": "T1082", "name": "System Information Discovery", "link": "https://attack.mitre.org/techniques/T1082/", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). On ESXi servers, threat actors may gather system information from various esxcli utilities, such as system hostname get, system version get, and storage filesystem list (to list storage volumes).\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.\nSystem Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment. ", "signatures": [{"severity": "INFO", "description": "Checks if Microsoft Office is installed", "match_data": ["HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\program.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Microsoft.VisualBasic\\v4.0_10.0.0.0__b03f5f7f11d50a3a\\Microsoft.VisualBasic.dll VolumeInformation", "C:\\Windows\\Fonts\\arial.ttf VolumeInformation", "C:\\Windows\\Fonts\\ariali.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambria.ttc VolumeInformation", "C:\\Windows\\Fonts\\Candarab.ttf VolumeInformation", "C:\\Windows\\Fonts\\consolab.ttf VolumeInformation", "C:\\Windows\\Fonts\\ebrima.ttf VolumeInformation", "C:\\Windows\\Fonts\\msjh.ttc VolumeInformation", "C:\\Windows\\Fonts\\seguili.ttf VolumeInformation", "C:\\Windows\\Fonts\\simsun.ttc VolumeInformation", "C:\\Windows\\Fonts\\Sitka.ttc VolumeInformation", "C:\\Windows\\Fonts\\sylfaen.ttf VolumeInformation", "C:\\Windows\\Fonts\\timesi.ttf VolumeInformation", "C:\\Windows\\Fonts\\verdanab.ttf VolumeInformation", "C:\\Windows\\Fonts\\YuGothR.ttc VolumeInformation", "C:\\Windows\\Fonts\\BASKVILL.TTF VolumeInformation", "C:\\Windows\\Fonts\\LBRITED.TTF VolumeInformation", "C:\\Windows\\Fonts\\VINERITC.TTF VolumeInformation", "C:\\Windows\\Fonts\\ERASBD.TTF VolumeInformation", "C:\\Windows\\Fonts\\segoeuii.ttf VolumeInformation", "C:\\Windows\\Fonts\\segoeuiz.ttf VolumeInformation", "C:\\Windows\\Fonts\\micross.ttf VolumeInformation", "C:\\ VolumeInformation"]}, {"severity": "INFO", "description": "Queries the cryptographic machine GUID", "match_data": ["HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\program.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Microsoft.VisualBasic\\v4.0_10.0.0.0__b03f5f7f11d50a3a\\Microsoft.VisualBasic.dll VolumeInformation", "C:\\Windows\\Fonts\\arial.ttf VolumeInformation", "C:\\Windows\\Fonts\\ariali.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambria.ttc VolumeInformation", "C:\\Windows\\Fonts\\Candarab.ttf VolumeInformation", "C:\\Windows\\Fonts\\consolab.ttf VolumeInformation", "C:\\Windows\\Fonts\\ebrima.ttf VolumeInformation", "C:\\Windows\\Fonts\\msjh.ttc VolumeInformation", "C:\\Windows\\Fonts\\seguili.ttf VolumeInformation", "C:\\Windows\\Fonts\\simsun.ttc VolumeInformation", "C:\\Windows\\Fonts\\Sitka.ttc VolumeInformation", "C:\\Windows\\Fonts\\sylfaen.ttf VolumeInformation", "C:\\Windows\\Fonts\\timesi.ttf VolumeInformation", "C:\\Windows\\Fonts\\verdanab.ttf VolumeInformation", "C:\\Windows\\Fonts\\YuGothR.ttc VolumeInformation", "C:\\Windows\\Fonts\\BASKVILL.TTF VolumeInformation", "C:\\Windows\\Fonts\\LBRITED.TTF VolumeInformation", "C:\\Windows\\Fonts\\VINERITC.TTF VolumeInformation", "C:\\Windows\\Fonts\\ERASBD.TTF VolumeInformation", "C:\\Windows\\Fonts\\segoeuii.ttf VolumeInformation", "C:\\Windows\\Fonts\\segoeuiz.ttf VolumeInformation", "C:\\Windows\\Fonts\\micross.ttf VolumeInformation", "C:\\ VolumeInformation"]}, {"severity": "INFO", "description": "Reads software policies", "match_data": ["HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\program.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Microsoft.VisualBasic\\v4.0_10.0.0.0__b03f5f7f11d50a3a\\Microsoft.VisualBasic.dll VolumeInformation", "C:\\Windows\\Fonts\\arial.ttf VolumeInformation", "C:\\Windows\\Fonts\\ariali.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambria.ttc VolumeInformation", "C:\\Windows\\Fonts\\Candarab.ttf VolumeInformation", "C:\\Windows\\Fonts\\consolab.ttf VolumeInformation", "C:\\Windows\\Fonts\\ebrima.ttf VolumeInformation", "C:\\Windows\\Fonts\\msjh.ttc VolumeInformation", "C:\\Windows\\Fonts\\seguili.ttf VolumeInformation", "C:\\Windows\\Fonts\\simsun.ttc VolumeInformation", "C:\\Windows\\Fonts\\Sitka.ttc VolumeInformation", "C:\\Windows\\Fonts\\sylfaen.ttf VolumeInformation", "C:\\Windows\\Fonts\\timesi.ttf VolumeInformation", "C:\\Windows\\Fonts\\verdanab.ttf VolumeInformation", "C:\\Windows\\Fonts\\YuGothR.ttc VolumeInformation", "C:\\Windows\\Fonts\\BASKVILL.TTF VolumeInformation", "C:\\Windows\\Fonts\\LBRITED.TTF VolumeInformation", "C:\\Windows\\Fonts\\VINERITC.TTF VolumeInformation", "C:\\Windows\\Fonts\\ERASBD.TTF VolumeInformation", "C:\\Windows\\Fonts\\segoeuii.ttf VolumeInformation", "C:\\Windows\\Fonts\\segoeuiz.ttf VolumeInformation", "C:\\Windows\\Fonts\\micross.ttf VolumeInformation", "C:\\ VolumeInformation"]}, {"severity": "INFO", "description": "Queries the volume information (name, serial number etc) of a device", "match_data": ["HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\program.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Microsoft.VisualBasic\\v4.0_10.0.0.0__b03f5f7f11d50a3a\\Microsoft.VisualBasic.dll VolumeInformation", "C:\\Windows\\Fonts\\arial.ttf VolumeInformation", "C:\\Windows\\Fonts\\ariali.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambria.ttc VolumeInformation", "C:\\Windows\\Fonts\\Candarab.ttf VolumeInformation", "C:\\Windows\\Fonts\\consolab.ttf VolumeInformation", "C:\\Windows\\Fonts\\ebrima.ttf VolumeInformation", "C:\\Windows\\Fonts\\msjh.ttc VolumeInformation", "C:\\Windows\\Fonts\\seguili.ttf VolumeInformation", "C:\\Windows\\Fonts\\simsun.ttc VolumeInformation", "C:\\Windows\\Fonts\\Sitka.ttc VolumeInformation", "C:\\Windows\\Fonts\\sylfaen.ttf VolumeInformation", "C:\\Windows\\Fonts\\timesi.ttf VolumeInformation", "C:\\Windows\\Fonts\\verdanab.ttf VolumeInformation", "C:\\Windows\\Fonts\\YuGothR.ttc VolumeInformation", "C:\\Windows\\Fonts\\BASKVILL.TTF VolumeInformation", "C:\\Windows\\Fonts\\LBRITED.TTF VolumeInformation", "C:\\Windows\\Fonts\\VINERITC.TTF VolumeInformation", "C:\\Windows\\Fonts\\ERASBD.TTF VolumeInformation", "C:\\Windows\\Fonts\\segoeuii.ttf VolumeInformation", "C:\\Windows\\Fonts\\segoeuiz.ttf VolumeInformation", "C:\\Windows\\Fonts\\micross.ttf VolumeInformation", "C:\\ VolumeInformation"]}]}]}, {"id": "TA0006", "name": "Credential Access", "link": "https://attack.mitre.org/tactics/TA0006/", "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "techniques": [{"id": "T1003", "name": "OS Credential Dumping", "link": "https://attack.mitre.org/techniques/T1003/", "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.", "signatures": [{"severity": "LOW", "description": "Tries to harvest and steal browser information (history, passwords, etc)", "match_data": ["C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Cookies", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles.ini", "C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\05rdgbi2.default-release\\pkcs11.txt", "C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Web Data", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\05rdgbi2.default-release\\logins.json", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\05rdgbi2.default-release\\cert9.db", "C:\\Users\\user\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\Login Data", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\yo17wh1x.default\\pkcs11.txt", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\05rdgbi2.default-release\\key4.db", "C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Local State"]}]}, {"id": "T1056", "name": "Input Capture", "link": "https://attack.mitre.org/techniques/T1056/", "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).", "signatures": [{"severity": "INFO", "description": "Creates a DirectInput object (often for capturing keystrokes)", "match_data": ["      <HOOK MODULE=\"DDRAW.DLL\" FUNCTION=\"DirectDrawCreateEx\"/>"]}]}]}, {"id": "TA0009", "name": "Collection", "link": "https://attack.mitre.org/tactics/TA0009/", "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to either steal (exfiltrate) the data or to use the data to gain more information about the target environment. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "techniques": [{"id": "T1056", "name": "Input Capture", "link": "https://attack.mitre.org/techniques/T1056/", "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. Credential API Hooking) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. Web Portal Capture).", "signatures": [{"severity": "INFO", "description": "Creates a DirectInput object (often for capturing keystrokes)", "match_data": ["      <HOOK MODULE=\"DDRAW.DLL\" FUNCTION=\"DirectDrawCreateEx\"/>"]}]}, {"id": "T1114", "name": "Email Collection", "link": "https://attack.mitre.org/techniques/T1114/", "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Emails may also contain details of ongoing incident response operations, which may allow adversaries to adjust their techniques in order to maintain persistence or evade defenses. Adversaries can collect or forward email from mail servers or clients. ", "signatures": [{"severity": "LOW", "description": "Tries to search for mail accounts", "match_data": ["HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows Messaging Subsystem\\Profiles\\Outlook\\"]}]}, {"id": "T1185", "name": "Browser Session Hijacking", "link": "https://attack.mitre.org/techniques/T1185/", "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet. Executing browser-based behaviors such as pivoting may require specific process permissions, such as SeDebugPrivilege and/or high-integrity/administrator rights.\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as Sharepoint or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.", "signatures": [{"severity": "INFO", "description": "Searches the installation path of Mozilla Firefox", "match_data": ["HKEY_LOCAL_MACHINE\\SOFTWARE\\WOW6432Node\\Mozilla\\Mozilla Firefox\\94.0.1 (x86 en-US)\\Main Install Directory"]}]}, {"id": "T1005", "name": "Data from Local System", "link": "https://attack.mitre.org/techniques/T1005/", "description": "Adversaries may search local system sources, such as file systems, configuration files, local databases, or virtual machine files, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.", "signatures": [{"severity": "LOW", "description": "Tries to harvest and steal browser information (history, passwords, etc)", "match_data": ["C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Cookies", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles.ini", "C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\05rdgbi2.default-release\\pkcs11.txt", "C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Web Data", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\05rdgbi2.default-release\\logins.json", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\05rdgbi2.default-release\\cert9.db", "C:\\Users\\user\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\Login Data", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\yo17wh1x.default\\pkcs11.txt", "C:\\Users\\user\\AppData\\Roaming\\Mozilla\\Firefox\\profiles\\05rdgbi2.default-release\\key4.db", "C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Local State"]}]}]}, {"id": "TA0011", "name": "Command and Control", "link": "https://attack.mitre.org/tactics/TA0011/", "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.", "techniques": [{"id": "T1105", "name": "Ingress Tool Transfer", "link": "https://attack.mitre.org/techniques/T1105/", "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.  A number of these tools, such as wget, curl, and scp, also exist on ESXi. After downloading a file, a threat actor may attempt to verify its integrity by checking its hash value (e.g., via certutil -hashfile).\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows search-ms protocol handler, to deliver malicious files to victims through remote file searches invoked by User Execution (typically after interacting with Phishing lures).\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.", "signatures": [{"severity": "INFO", "description": "Downloads files from webservers via HTTP", "match_data": ["GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67"]}, {"severity": "INFO", "description": "Some HTTP requests failed (404). It is likely that the sample will exhibit less behavior.", "match_data": ["GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67"]}, {"severity": "INFO", "description": "Tries to download or post to a non-existing HTTP route (HTTP/1.1 404 Not Found / 503 Service Unavailable)", "match_data": ["GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67"]}]}, {"id": "T1095", "name": "Non-Application Layer Protocol", "link": "https://attack.mitre.org/techniques/T1095/", "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\nIn ESXi environments, adversaries may leverage the Virtual Machine Communication Interface (VMCI) for communication between guest virtual machines and the ESXi host. This traffic is similar to client-server communications on traditional network sockets but is localized to the physical machine running the ESXi host, meaning it does not traverse external networks (routers, switches). This results in communications that are invisible to external monitoring and standard networking tools like tcpdump, netstat, nmap, and Wireshark. By adding a VMCI backdoor to a compromised ESXi host, adversaries may persistently regain access from any guest VM to the compromised ESXi host\u2019s backdoor, regardless of network segmentation or firewall rules in place.", "signatures": [{"severity": "INFO", "description": "Performs DNS lookups", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67"]}, {"severity": "INFO", "description": "Downloads files from webservers via HTTP", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67"]}, {"severity": "INFO", "description": "Posts data to webserver", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67"]}, {"severity": "INFO", "description": "Tries to download or post to a non-existing HTTP route (HTTP/1.1 404 Not Found / 503 Service Unavailable)", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67"]}]}, {"id": "T1071", "name": "Application Layer Protocol", "link": "https://attack.mitre.org/techniques/T1071/", "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, DNS, or publishing/subscribing. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "signatures": [{"severity": "INFO", "description": "Performs DNS lookups", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "POST /8arr/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.medcangroup.netOrigin", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /4khg/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.worrr19.sbsOrigin: ht", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /3e7x/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.thrustaviation.infoOr"]}, {"severity": "INFO", "description": "Downloads files from webservers via HTTP", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "POST /8arr/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.medcangroup.netOrigin", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /4khg/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.worrr19.sbsOrigin: ht", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /3e7x/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.thrustaviation.infoOr"]}, {"severity": "INFO", "description": "Posts data to webserver", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "POST /8arr/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.medcangroup.netOrigin", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /4khg/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.worrr19.sbsOrigin: ht", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /3e7x/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.thrustaviation.infoOr"]}, {"severity": "INFO", "description": "Tries to download or post to a non-existing HTTP route (HTTP/1.1 404 Not Found / 503 Service Unavailable)", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "POST /8arr/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.medcangroup.netOrigin", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /4khg/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.worrr19.sbsOrigin: ht", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /3e7x/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.thrustaviation.infoOr"]}, {"severity": "INFO", "description": "Uses a known web browser user agent for HTTP communication", "match_data": ["DNS query: www.o8azymfkzk8vk.buzz", "DNS query: www.51-cg.store", "DNS query: www.medcangroup.net", "DNS query: www.worrr19.sbs", "DNS query: www.thrustaviation.info", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:10 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:13 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:16 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:19 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:22 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:25 GMTContent-Type: text/htmlTransfer-Encoding: chunkedConnection: closeVary: Accept-EncodingETag: W/\"67d116ff-e3b8\"Content-Encoding: gz", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 03:40:27 GMTContent-Type: text/htmlContent-Length: 58296Connection: closeVary: Accept-EncodingETag: \"67d116ff-e3b8\"Data Raw: 3c 21 64 6f 63 74", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:11 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:16 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "HTTP/1.1 404 Not FoundServer: nginxDate: Wed, 09 Apr 2025 11:41:23 GMTContent-Type: text/htmlContent-Length: 187Connection: closeExpires: 0Cache-control: privateData Raw: 53 6f 72 72 79 2c 20 50 61 67", "POST /y6zc/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.51-cg.storeOrigin: ht", "GET /y6zc/?vlRlB=UNMHaZRx34l&eHd=q1XarDldCzXyhylNab0NOBIgj3FmVsVdAOsiSRi0rBJeuRcNnCidlXcdGIRvxlmc8z9IgiZ4vN7X1h6IhUdj5KOqEQh3U56Ig3LU6xDsmjulAQ0zIUM1XJdKYFb7pDkLeVKfqX0e3mkG HTTP/1.1Accept: text/html,", "POST /8arr/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.medcangroup.netOrigin", "GET /8arr/?eHd=HMA7CB2Pudc+xTruiFu+EEZGKN1AaYIaCx4acPF2yxAJqzUdN1r4vrxQpZXOJr54brq4hJ/MpN5s8SCLp7xANoXweThE5juG5LFLTscf4hpfqGU/8dW3Wa3ND/5lIIfntDD3eXnKOXYt&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /4khg/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.worrr19.sbsOrigin: ht", "GET /4khg/?eHd=j22GHCOTUvCe5ModIYUpiXTIl96Q33HygbxX4faLM5QIkDUsgF1u1eIgtUX/L9TBsXpkDMHD6tQuwtZYYa4glv1xFrWkuXjylavjANs6TFvY0dSRhJbmY7/ZgfbYczD+MmLpJ3xKgsLG&vlRlB=UNMHaZRx34l HTTP/1.1Accept: text/html,", "POST /3e7x/ HTTP/1.1Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Encoding: gzip, deflate, brAccept-Language: en-USHost: www.thrustaviation.infoOr"]}]}]}]}}, "links": {"self": "https://www.virustotal.com/api/v3/files/a7284cc15c25a8ad3af96489ce6c50184517c47be68179fbb8a9bc5f945c5944/behaviour_mitre_trees"}}