{"data": {"CAPA": {"tactics": [{"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1620", "name": "Reflective Code Loading", "link": "https://attack.mitre.org/techniques/T1620/", "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., Shared Modules).\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode). For example, the Assembly.Load() method executed by PowerShell may be abused to load raw code into the running process.\nReflective code injection is very similar to Process Injection except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.", "signatures": [{"severity": "INFO", "description": "invoke .NET assembly method"}]}]}]}, "VMRay": {"tactics": [{"id": "TA0004", "name": "Privilege Escalation", "link": "https://attack.mitre.org/tactics/TA0004/", "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ", "techniques": [{"id": "T1134", "name": "Access Token Manipulation", "link": "https://attack.mitre.org/techniques/T1134/", "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. Token Impersonation/Theft) or used to spawn a new process (i.e. Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\nAny standard user can use the runas command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.", "signatures": [{"severity": "INFO", "description": "(Process #2) b5tfxl9umzqzi48g.exe enables process privilege \"SeDebugPrivilege\"."}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1134", "name": "Access Token Manipulation", "link": "https://attack.mitre.org/techniques/T1134/", "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. Token Impersonation/Theft) or used to spawn a new process (i.e. Create Process with Token). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.\nAny standard user can use the runas command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.", "signatures": [{"severity": "INFO", "description": "(Process #2) b5tfxl9umzqzi48g.exe enables process privilege \"SeDebugPrivilege\"."}]}]}, {"id": "TA0009", "name": "Collection", "link": "https://attack.mitre.org/tactics/TA0009/", "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to either steal (exfiltrate) the data or to use the data to gain more information about the target environment. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "techniques": [{"id": "T1119", "name": "Automated Collection", "link": "https://attack.mitre.org/techniques/T1119/", "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a Command and Scripting Interpreter to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. \nIn cloud-based environments, adversaries may also use cloud APIs, data pipelines, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data. \nThis functionality could also be built into remote access tools. \nThis technique may incorporate use of other techniques such as File and Directory Discovery and Lateral Tool Transfer to identify and move files, as well as Cloud Service Dashboard and Cloud Storage Object Discovery to identify resources in cloud environments.", "signatures": [{"severity": "LOW", "description": "(Process #2) b5tfxl9umzqzi48g.exe searches for sensitive data of web browser \"Cyberfox\" by file."}]}, {"id": "T1005", "name": "Data from Local System", "link": "https://attack.mitre.org/techniques/T1005/", "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.", "signatures": [{"severity": "LOW", "description": "(Process #2) b5tfxl9umzqzi48g.exe searches for sensitive data of web browser \"Cyberfox\" by file."}]}]}, {"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1012", "name": "Query Registry", "link": "https://attack.mitre.org/techniques/T1012/", "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security. Information can easily be queried using the Reg utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from Query Registry during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.", "signatures": [{"severity": "LOW", "description": "(Process #2) b5tfxl9umzqzi48g.exe tries to read sensitive data of mail application \"Microsoft Outlook\" by registry."}]}, {"id": "T1083", "name": "File and Directory Discovery", "link": "https://attack.mitre.org/techniques/T1083/", "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from File and Directory Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nMany command shell utilities can be used to obtain this information. Examples include dir, tree, ls, find, and locate. Custom tools may also be used to gather file and directory information and interact with the Native API. Adversaries may also leverage a Network Device CLI on network devices to gather file and directory information (e.g. dir, show flash, and/or nvram).\nSome files and directories may require elevated or specific user permissions to access.", "signatures": [{"severity": "LOW", "description": "(Process #2) b5tfxl9umzqzi48g.exe searches for sensitive data of web browser \"Cyberfox\" by file."}]}, {"id": "T1016", "name": "System Network Configuration Discovery", "link": "https://attack.mitre.org/techniques/T1016/", "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ", "signatures": [{"severity": "INFO", "description": "(Process #2) b5tfxl9umzqzi48g.exe checks external IP by asking IP info service at \"http://checkip.dyndns.org\"."}]}]}]}, "Yomi Hunter": {"tactics": [{"id": "TA0002", "name": "Execution", "link": "https://attack.mitre.org/tactics/TA0002/", "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ", "techniques": [{"id": "T1129", "name": "Shared Modules", "link": "https://attack.mitre.org/techniques/T1129/", "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., Native API).\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in dlfcn.h in functions such as dlopen and dlsym. Although macOS can execute .so files, common practice uses .dylib files.\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in NTDLL.dll and is part of the Windows Native API which is called from functions like LoadLibrary at run time.", "signatures": [{"severity": "UNKNOWN", "description": "The process attempted to dynamically load a malicious function"}, {"severity": "UNKNOWN", "description": "The process tried to load dynamically one or more functions."}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1564", "name": "Hide Artifacts", "link": "https://attack.mitre.org/techniques/T1564/", "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology."}, {"id": "T1564.003", "name": "Hidden Window", "link": "https://attack.mitre.org/techniques/T1564/003/", "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.\nOn macOS, the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be apple.awt.UIElement, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\nSimilarly, on Windows there are a variety of features in scripting languages, such as PowerShell, Jscript, and Visual Basic to make windows hidden. One example of this is powershell.exe -WindowStyle Hidden.\nIn addition, Windows supports the CreateDesktop() API that can create a hidden desktop window with its own corresponding explorer.exe process.  All applications running on the hidden desktop window, such as a hidden VNC (hVNC) session, will be invisible to other desktops windows.", "signatures": [{"severity": "UNKNOWN", "description": "Detected the creation of a hidden window (common execution hiding technique)"}]}]}, {"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1057", "name": "Process Discovery", "link": "https://attack.mitre.org/techniques/T1057/", "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc. \nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.", "signatures": [{"severity": "UNKNOWN", "description": "The process has tried to detect the debugger probing the use of page guards."}, {"severity": "UNKNOWN", "description": "The process attempted to detect a running debugger using common APIs"}]}]}]}, "Zenbox": {"tactics": [{"id": "TA0003", "name": "Persistence", "link": "https://attack.mitre.org/tactics/TA0003/", "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "kernel.appcore.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "windows.storage.dll", "wldp.dll", "profapi.dll", "cryptsp.dll", "rsaenh.dll", "cryptbase.dll", "dwrite.dll", "amsi.dll", "userenv.dll", "gpapi.dll", "textshaping.dll", "windowscodecs.dll", "rasapi32.dll", "rasman.dll", "rtutils.dll", "mswsock.dll", "winhttp.dll", "ondemandconnroutehelper.dll", "iphlpapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "dnsapi.dll", "winnsi.dll", "rasadhlp.dll", "fwpuclnt.dll", "secur32.dll", "sspicli.dll", "schannel.dll", "mskeyprotect.dll", "ntasn1.dll", "ncrypt.dll", "ncryptsslp.dll", "msasn1.dll", "dpapi.dll"]}]}]}, {"id": "TA0004", "name": "Privilege Escalation", "link": "https://attack.mitre.org/tactics/TA0004/", "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "kernel.appcore.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "windows.storage.dll", "wldp.dll", "profapi.dll", "cryptsp.dll", "rsaenh.dll", "cryptbase.dll", "dwrite.dll", "amsi.dll", "userenv.dll", "gpapi.dll", "textshaping.dll", "windowscodecs.dll", "rasapi32.dll", "rasman.dll", "rtutils.dll", "mswsock.dll", "winhttp.dll", "ondemandconnroutehelper.dll", "iphlpapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "dnsapi.dll", "winnsi.dll", "rasadhlp.dll", "fwpuclnt.dll", "secur32.dll", "sspicli.dll", "schannel.dll", "mskeyprotect.dll", "ntasn1.dll", "ncrypt.dll", "ncryptsslp.dll", "msasn1.dll", "dpapi.dll"]}]}, {"id": "T1055", "name": "Process Injection", "link": "https://attack.mitre.org/techniques/T1055/", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "signatures": [{"severity": "LOW", "description": "Injects a PE file into a foreign processes", "match_data": ["C:\\Users\\user\\Desktop\\software.exe base: 400000 value starts with: 4D5A"]}]}]}, {"id": "TA0005", "name": "Defense Evasion", "link": "https://attack.mitre.org/tactics/TA0005/", "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ", "techniques": [{"id": "T1574", "name": "Hijack Execution Flow", "link": "https://attack.mitre.org/techniques/T1574/", "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads."}, {"id": "T1574.002", "name": "DLL Side-Loading", "link": "https://attack.mitre.org/techniques/T1574/002/", "description": "Adversaries may execute their own malicious payloads by side-loading DLLs. Similar to DLL Search Order Hijacking, side-loading involves hijacking which DLL a program loads. But rather than just planting the DLL within the search order of a program then waiting for the victim application to be invoked, adversaries may directly side-load their payloads by planting then invoking a legitimate application that executes their payload(s).\nSide-loading takes advantage of the DLL search order used by the loader by positioning both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.", "signatures": [{"severity": "INFO", "description": "Tries to load missing DLLs", "match_data": ["mscoree.dll", "apphelp.dll", "kernel.appcore.dll", "version.dll", "vcruntime140_clr0400.dll", "ucrtbase_clr0400.dll", "uxtheme.dll", "windows.storage.dll", "wldp.dll", "profapi.dll", "cryptsp.dll", "rsaenh.dll", "cryptbase.dll", "dwrite.dll", "amsi.dll", "userenv.dll", "gpapi.dll", "textshaping.dll", "windowscodecs.dll", "rasapi32.dll", "rasman.dll", "rtutils.dll", "mswsock.dll", "winhttp.dll", "ondemandconnroutehelper.dll", "iphlpapi.dll", "dhcpcsvc6.dll", "dhcpcsvc.dll", "dnsapi.dll", "winnsi.dll", "rasadhlp.dll", "fwpuclnt.dll", "secur32.dll", "sspicli.dll", "schannel.dll", "mskeyprotect.dll", "ntasn1.dll", "ncrypt.dll", "ncryptsslp.dll", "msasn1.dll", "dpapi.dll"]}]}, {"id": "T1055", "name": "Process Injection", "link": "https://attack.mitre.org/techniques/T1055/", "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ", "signatures": [{"severity": "LOW", "description": "Injects a PE file into a foreign processes", "match_data": ["C:\\Users\\user\\Desktop\\software.exe base: 400000 value starts with: 4D5A"]}]}, {"id": "T1036", "name": "Masquerading", "link": "https://attack.mitre.org/techniques/T1036/", "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\nRenaming abusable system utilities to evade security monitoring is also a form of Masquerading.", "signatures": [{"severity": "INFO", "description": "Creates files inside the user directory", "match_data": ["C:\\Users\\user\\AppData\\Local\\Microsoft\\CLR_v4.0_32\\UsageLogs\\software.exe.log"]}]}, {"id": "T1562", "name": "Impair Defenses", "link": "https://attack.mitre.org/techniques/T1562/", "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\nAdversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out, preventing a system from shutting down, or disabling or modifying the update process. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components. These restrictions can further enable malicious operations as well as the continued propagation of incidents."}, {"id": "T1562.001", "name": "Disable or Modify Tools", "link": "https://attack.mitre.org/techniques/T1562/001/", "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to Indicator Blocking, adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection. \nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational may be modified to tamper with and potentially disable Sysmon logging. \nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools. For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. Exploitation for Privilege Escalation), which may lead to bypassing anti-tampering features.", "signatures": [{"severity": "INFO", "description": "Creates guard pages, often used to prevent reverse engineering and debugging", "match_data": ["page read and write | page guard"]}]}, {"id": "T1497", "name": "Virtualization/Sandbox Evasion", "link": "https://attack.mitre.org/techniques/T1497/", "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.", "signatures": [{"severity": "INFO", "description": "Contains medium sleeps (>= 30s)", "match_data": ["delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "delay time: 100000", "delay time: 99991", "delay time: 99828", "delay time: 99705", "delay time: 99547", "delay time: 99373", "delay time: 99241", "delay time: 99134", "delay time: 99012", "delay time: 98900", "delay time: 98781", "delay time: 98672", "-922337203685477s >= -30000s", "44 > 30", "-40582836962160988s >= -30000s", "-600000s >= -30000s", "5259 > 30", "-599703s >= -30000s", "-599530s >= -30000s", "-599367s >= -30000s", "-598716s >= -30000s", "-598474s >= -30000s", "-598328s >= -30000s", "-598218s >= -30000s", "-598108s >= -30000s", "-597995s >= -30000s", "4487 > 30", "-597890s >= -30000s", "-597763s >= -30000s", "-597547s >= -30000s", "-597417s >= -30000s", "-597203s >= -30000s", "-597075s >= -30000s", "-596962s >= -30000s", "-596844s >= -30000s", "-596733s >= -30000s", "-596624s >= -30000s", "-596420s >= -30000s", "-596188s >= -30000s", "-596044s >= -30000s", "-595913s >= -30000s", "-595788s >= -30000s", "-595600s >= -30000s", "-595436s >= -30000s", "-595223s >= -30000s", "-595098s >= -30000s", "-594975s >= -30000s", "-594844s >= -30000s", "-594734s >= -30000s", "-594620s >= -30000s", "-594488s >= -30000s", "-594360s >= -30000s", "-594211s >= -30000s", "-594091s >= -30000s", "-593968s >= -30000s", "-593858s >= -30000s", "-593750s >= -30000s", "-593641s >= -30000s", "-593531s >= -30000s", "-593417s >= -30000s", "-593297s >= -30000s", "-593162s >= -30000s", "-593042s >= -30000s", "-592922s >= -30000s", "-592812s >= -30000s", "-592696s >= -30000s", "-592578s >= -30000s", "-592460s >= -30000s", "-592254s >= -30000s", "-592099s >= -30000s", "-591965s >= -30000s", "-591391s >= -30000s", "-590860s >= -30000s", "-590703s >= -30000s", "-100000s >= -30000s", "-99991s >= -30000s", "-99828s >= -30000s", "-99705s >= -30000s", "-99547s >= -30000s", "-99373s >= -30000s", "-99241s >= -30000s", "-99134s >= -30000s", "-99012s >= -30000s", "-98900s >= -30000s", "-98781s >= -30000s", "-98672s >= -30000s", "delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "1080000 memory reserve | memory write watch", "2A60000 memory reserve | memory write watch", "4A60000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "75B0000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "AB50000 memory reserve | memory write watch", "1800000 memory reserve | memory write watch", "31E0000 memory reserve | memory write watch", "1870000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "May sleep (evasive loops) to hinder dynamic analysis", "match_data": ["delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "delay time: 100000", "delay time: 99991", "delay time: 99828", "delay time: 99705", "delay time: 99547", "delay time: 99373", "delay time: 99241", "delay time: 99134", "delay time: 99012", "delay time: 98900", "delay time: 98781", "delay time: 98672", "-922337203685477s >= -30000s", "44 > 30", "-40582836962160988s >= -30000s", "-600000s >= -30000s", "5259 > 30", "-599703s >= -30000s", "-599530s >= -30000s", "-599367s >= -30000s", "-598716s >= -30000s", "-598474s >= -30000s", "-598328s >= -30000s", "-598218s >= -30000s", "-598108s >= -30000s", "-597995s >= -30000s", "4487 > 30", "-597890s >= -30000s", "-597763s >= -30000s", "-597547s >= -30000s", "-597417s >= -30000s", "-597203s >= -30000s", "-597075s >= -30000s", "-596962s >= -30000s", "-596844s >= -30000s", "-596733s >= -30000s", "-596624s >= -30000s", "-596420s >= -30000s", "-596188s >= -30000s", "-596044s >= -30000s", "-595913s >= -30000s", "-595788s >= -30000s", "-595600s >= -30000s", "-595436s >= -30000s", "-595223s >= -30000s", "-595098s >= -30000s", "-594975s >= -30000s", "-594844s >= -30000s", "-594734s >= -30000s", "-594620s >= -30000s", "-594488s >= -30000s", "-594360s >= -30000s", "-594211s >= -30000s", "-594091s >= -30000s", "-593968s >= -30000s", "-593858s >= -30000s", "-593750s >= -30000s", "-593641s >= -30000s", "-593531s >= -30000s", "-593417s >= -30000s", "-593297s >= -30000s", "-593162s >= -30000s", "-593042s >= -30000s", "-592922s >= -30000s", "-592812s >= -30000s", "-592696s >= -30000s", "-592578s >= -30000s", "-592460s >= -30000s", "-592254s >= -30000s", "-592099s >= -30000s", "-591965s >= -30000s", "-591391s >= -30000s", "-590860s >= -30000s", "-590703s >= -30000s", "-100000s >= -30000s", "-99991s >= -30000s", "-99828s >= -30000s", "-99705s >= -30000s", "-99547s >= -30000s", "-99373s >= -30000s", "-99241s >= -30000s", "-99134s >= -30000s", "-99012s >= -30000s", "-98900s >= -30000s", "-98781s >= -30000s", "-98672s >= -30000s", "delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "1080000 memory reserve | memory write watch", "2A60000 memory reserve | memory write watch", "4A60000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "75B0000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "AB50000 memory reserve | memory write watch", "1800000 memory reserve | memory write watch", "31E0000 memory reserve | memory write watch", "1870000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Contains long sleeps (>= 3 min)", "match_data": ["delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "delay time: 100000", "delay time: 99991", "delay time: 99828", "delay time: 99705", "delay time: 99547", "delay time: 99373", "delay time: 99241", "delay time: 99134", "delay time: 99012", "delay time: 98900", "delay time: 98781", "delay time: 98672", "-922337203685477s >= -30000s", "44 > 30", "-40582836962160988s >= -30000s", "-600000s >= -30000s", "5259 > 30", "-599703s >= -30000s", "-599530s >= -30000s", "-599367s >= -30000s", "-598716s >= -30000s", "-598474s >= -30000s", "-598328s >= -30000s", "-598218s >= -30000s", "-598108s >= -30000s", "-597995s >= -30000s", "4487 > 30", "-597890s >= -30000s", "-597763s >= -30000s", "-597547s >= -30000s", "-597417s >= -30000s", "-597203s >= -30000s", "-597075s >= -30000s", "-596962s >= -30000s", "-596844s >= -30000s", "-596733s >= -30000s", "-596624s >= -30000s", "-596420s >= -30000s", "-596188s >= -30000s", "-596044s >= -30000s", "-595913s >= -30000s", "-595788s >= -30000s", "-595600s >= -30000s", "-595436s >= -30000s", "-595223s >= -30000s", "-595098s >= -30000s", "-594975s >= -30000s", "-594844s >= -30000s", "-594734s >= -30000s", "-594620s >= -30000s", "-594488s >= -30000s", "-594360s >= -30000s", "-594211s >= -30000s", "-594091s >= -30000s", "-593968s >= -30000s", "-593858s >= -30000s", "-593750s >= -30000s", "-593641s >= -30000s", "-593531s >= -30000s", "-593417s >= -30000s", "-593297s >= -30000s", "-593162s >= -30000s", "-593042s >= -30000s", "-592922s >= -30000s", "-592812s >= -30000s", "-592696s >= -30000s", "-592578s >= -30000s", "-592460s >= -30000s", "-592254s >= -30000s", "-592099s >= -30000s", "-591965s >= -30000s", "-591391s >= -30000s", "-590860s >= -30000s", "-590703s >= -30000s", "-100000s >= -30000s", "-99991s >= -30000s", "-99828s >= -30000s", "-99705s >= -30000s", "-99547s >= -30000s", "-99373s >= -30000s", "-99241s >= -30000s", "-99134s >= -30000s", "-99012s >= -30000s", "-98900s >= -30000s", "-98781s >= -30000s", "-98672s >= -30000s", "delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "1080000 memory reserve | memory write watch", "2A60000 memory reserve | memory write watch", "4A60000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "75B0000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "AB50000 memory reserve | memory write watch", "1800000 memory reserve | memory write watch", "31E0000 memory reserve | memory write watch", "1870000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Allocates memory with a write watch (potentially for evading sandboxes)", "match_data": ["delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "delay time: 100000", "delay time: 99991", "delay time: 99828", "delay time: 99705", "delay time: 99547", "delay time: 99373", "delay time: 99241", "delay time: 99134", "delay time: 99012", "delay time: 98900", "delay time: 98781", "delay time: 98672", "-922337203685477s >= -30000s", "44 > 30", "-40582836962160988s >= -30000s", "-600000s >= -30000s", "5259 > 30", "-599703s >= -30000s", "-599530s >= -30000s", "-599367s >= -30000s", "-598716s >= -30000s", "-598474s >= -30000s", "-598328s >= -30000s", "-598218s >= -30000s", "-598108s >= -30000s", "-597995s >= -30000s", "4487 > 30", "-597890s >= -30000s", "-597763s >= -30000s", "-597547s >= -30000s", "-597417s >= -30000s", "-597203s >= -30000s", "-597075s >= -30000s", "-596962s >= -30000s", "-596844s >= -30000s", "-596733s >= -30000s", "-596624s >= -30000s", "-596420s >= -30000s", "-596188s >= -30000s", "-596044s >= -30000s", "-595913s >= -30000s", "-595788s >= -30000s", "-595600s >= -30000s", "-595436s >= -30000s", "-595223s >= -30000s", "-595098s >= -30000s", "-594975s >= -30000s", "-594844s >= -30000s", "-594734s >= -30000s", "-594620s >= -30000s", "-594488s >= -30000s", "-594360s >= -30000s", "-594211s >= -30000s", "-594091s >= -30000s", "-593968s >= -30000s", "-593858s >= -30000s", "-593750s >= -30000s", "-593641s >= -30000s", "-593531s >= -30000s", "-593417s >= -30000s", "-593297s >= -30000s", "-593162s >= -30000s", "-593042s >= -30000s", "-592922s >= -30000s", "-592812s >= -30000s", "-592696s >= -30000s", "-592578s >= -30000s", "-592460s >= -30000s", "-592254s >= -30000s", "-592099s >= -30000s", "-591965s >= -30000s", "-591391s >= -30000s", "-590860s >= -30000s", "-590703s >= -30000s", "-100000s >= -30000s", "-99991s >= -30000s", "-99828s >= -30000s", "-99705s >= -30000s", "-99547s >= -30000s", "-99373s >= -30000s", "-99241s >= -30000s", "-99134s >= -30000s", "-99012s >= -30000s", "-98900s >= -30000s", "-98781s >= -30000s", "-98672s >= -30000s", "delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "1080000 memory reserve | memory write watch", "2A60000 memory reserve | memory write watch", "4A60000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "75B0000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "AB50000 memory reserve | memory write watch", "1800000 memory reserve | memory write watch", "31E0000 memory reserve | memory write watch", "1870000 memory reserve | memory write watch"]}]}, {"id": "T1027", "name": "Obfuscated Files or Information", "link": "https://attack.mitre.org/techniques/T1027/", "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and Deobfuscate/Decode Files or Information for User Execution. The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.  Adversaries may also use compressed or archived scripts, such as JavaScript. \nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery.  Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. \nAdversaries may also abuse Command Obfuscation to obscure commands executed from payloads or directly via Command and Scripting Interpreter. Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms.   ", "signatures": [{"severity": "INFO", "description": "Binary may include packed or crypted data", "match_data": ["section name: .text entropy: 6.952547257554335"]}]}, {"id": "T1027.002", "name": "Software Packing", "link": "https://attack.mitre.org/techniques/T1027/002/", "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code. \nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.  ", "signatures": [{"severity": "INFO", "description": "Binary may include packed or crypted data", "match_data": ["section name: .text entropy: 6.952547257554335", "Section: .text IMAGE_SCN_CNT_CODE, IMAGE_SCN_MEM_EXECUTE, IMAGE_SCN_MEM_READ"]}, {"severity": "INFO", "description": "PE file has an executable .text section which is very likely to contain packed code (zlib compression ratio < 0.3)", "match_data": ["section name: .text entropy: 6.952547257554335", "Section: .text IMAGE_SCN_CNT_CODE, IMAGE_SCN_MEM_EXECUTE, IMAGE_SCN_MEM_READ"]}]}, {"id": "T1070", "name": "Indicator Removal", "link": "https://attack.mitre.org/techniques/T1070/", "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred."}, {"id": "T1070.006", "name": "Timestomp", "link": "https://attack.mitre.org/techniques/T1070/006/", "description": "Adversaries may modify file time attributes to hide new files or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder and blend malicious files with legitimate files.\nBoth the $STANDARD_INFORMATION ($SI) and $FILE_NAME ($FN) attributes record times in a Master File Table (MFT) file. $SI (dates/time stamps) is displayed to the end user, including in the File System view, while $FN is dealt with by the kernel.\nModifying the $SI attribute is the most common method of timestomping because it can be modified at the user level using API calls. $FN timestomping, however, typically requires interacting with the system kernel or moving or renaming a file.\nAdversaries modify timestamps on files so that they do not appear conspicuous to forensic investigators or file analysis tools. In order to evade detections that rely on identifying discrepancies between the $SI and $FN attributes, adversaries may also engage in \u201cdouble timestomping\u201d by modifying times on both attributes simultaneously.\nTimestomping may be used along with file name Masquerading to hide malware and tools.", "signatures": [{"severity": "INFO", "description": "Binary contains a suspicious time stamp", "match_data": ["0xAEA865BC [Thu Nov  9 04:21:16 2062 UTC]"]}]}]}, {"id": "TA0007", "name": "Discovery", "link": "https://attack.mitre.org/tactics/TA0007/", "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ", "techniques": [{"id": "T1497", "name": "Virtualization/Sandbox Evasion", "link": "https://attack.mitre.org/techniques/T1497/", "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from Virtualization/Sandbox Evasion during automated discovery to shape follow-on behaviors.\nAdversaries may use several methods to accomplish Virtualization/Sandbox Evasion such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.", "signatures": [{"severity": "INFO", "description": "Contains medium sleeps (>= 30s)", "match_data": ["delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "delay time: 100000", "delay time: 99991", "delay time: 99828", "delay time: 99705", "delay time: 99547", "delay time: 99373", "delay time: 99241", "delay time: 99134", "delay time: 99012", "delay time: 98900", "delay time: 98781", "delay time: 98672", "-922337203685477s >= -30000s", "44 > 30", "-40582836962160988s >= -30000s", "-600000s >= -30000s", "5259 > 30", "-599703s >= -30000s", "-599530s >= -30000s", "-599367s >= -30000s", "-598716s >= -30000s", "-598474s >= -30000s", "-598328s >= -30000s", "-598218s >= -30000s", "-598108s >= -30000s", "-597995s >= -30000s", "4487 > 30", "-597890s >= -30000s", "-597763s >= -30000s", "-597547s >= -30000s", "-597417s >= -30000s", "-597203s >= -30000s", "-597075s >= -30000s", "-596962s >= -30000s", "-596844s >= -30000s", "-596733s >= -30000s", "-596624s >= -30000s", "-596420s >= -30000s", "-596188s >= -30000s", "-596044s >= -30000s", "-595913s >= -30000s", "-595788s >= -30000s", "-595600s >= -30000s", "-595436s >= -30000s", "-595223s >= -30000s", "-595098s >= -30000s", "-594975s >= -30000s", "-594844s >= -30000s", "-594734s >= -30000s", "-594620s >= -30000s", "-594488s >= -30000s", "-594360s >= -30000s", "-594211s >= -30000s", "-594091s >= -30000s", "-593968s >= -30000s", "-593858s >= -30000s", "-593750s >= -30000s", "-593641s >= -30000s", "-593531s >= -30000s", "-593417s >= -30000s", "-593297s >= -30000s", "-593162s >= -30000s", "-593042s >= -30000s", "-592922s >= -30000s", "-592812s >= -30000s", "-592696s >= -30000s", "-592578s >= -30000s", "-592460s >= -30000s", "-592254s >= -30000s", "-592099s >= -30000s", "-591965s >= -30000s", "-591391s >= -30000s", "-590860s >= -30000s", "-590703s >= -30000s", "-100000s >= -30000s", "-99991s >= -30000s", "-99828s >= -30000s", "-99705s >= -30000s", "-99547s >= -30000s", "-99373s >= -30000s", "-99241s >= -30000s", "-99134s >= -30000s", "-99012s >= -30000s", "-98900s >= -30000s", "-98781s >= -30000s", "-98672s >= -30000s", "delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "1080000 memory reserve | memory write watch", "2A60000 memory reserve | memory write watch", "4A60000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "75B0000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "AB50000 memory reserve | memory write watch", "1800000 memory reserve | memory write watch", "31E0000 memory reserve | memory write watch", "1870000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "May sleep (evasive loops) to hinder dynamic analysis", "match_data": ["delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "delay time: 100000", "delay time: 99991", "delay time: 99828", "delay time: 99705", "delay time: 99547", "delay time: 99373", "delay time: 99241", "delay time: 99134", "delay time: 99012", "delay time: 98900", "delay time: 98781", "delay time: 98672", "-922337203685477s >= -30000s", "44 > 30", "-40582836962160988s >= -30000s", "-600000s >= -30000s", "5259 > 30", "-599703s >= -30000s", "-599530s >= -30000s", "-599367s >= -30000s", "-598716s >= -30000s", "-598474s >= -30000s", "-598328s >= -30000s", "-598218s >= -30000s", "-598108s >= -30000s", "-597995s >= -30000s", "4487 > 30", "-597890s >= -30000s", "-597763s >= -30000s", "-597547s >= -30000s", "-597417s >= -30000s", "-597203s >= -30000s", "-597075s >= -30000s", "-596962s >= -30000s", "-596844s >= -30000s", "-596733s >= -30000s", "-596624s >= -30000s", "-596420s >= -30000s", "-596188s >= -30000s", "-596044s >= -30000s", "-595913s >= -30000s", "-595788s >= -30000s", "-595600s >= -30000s", "-595436s >= -30000s", "-595223s >= -30000s", "-595098s >= -30000s", "-594975s >= -30000s", "-594844s >= -30000s", "-594734s >= -30000s", "-594620s >= -30000s", "-594488s >= -30000s", "-594360s >= -30000s", "-594211s >= -30000s", "-594091s >= -30000s", "-593968s >= -30000s", "-593858s >= -30000s", "-593750s >= -30000s", "-593641s >= -30000s", "-593531s >= -30000s", "-593417s >= -30000s", "-593297s >= -30000s", "-593162s >= -30000s", "-593042s >= -30000s", "-592922s >= -30000s", "-592812s >= -30000s", "-592696s >= -30000s", "-592578s >= -30000s", "-592460s >= -30000s", "-592254s >= -30000s", "-592099s >= -30000s", "-591965s >= -30000s", "-591391s >= -30000s", "-590860s >= -30000s", "-590703s >= -30000s", "-100000s >= -30000s", "-99991s >= -30000s", "-99828s >= -30000s", "-99705s >= -30000s", "-99547s >= -30000s", "-99373s >= -30000s", "-99241s >= -30000s", "-99134s >= -30000s", "-99012s >= -30000s", "-98900s >= -30000s", "-98781s >= -30000s", "-98672s >= -30000s", "delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "1080000 memory reserve | memory write watch", "2A60000 memory reserve | memory write watch", "4A60000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "75B0000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "AB50000 memory reserve | memory write watch", "1800000 memory reserve | memory write watch", "31E0000 memory reserve | memory write watch", "1870000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Contains long sleeps (>= 3 min)", "match_data": ["delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "delay time: 100000", "delay time: 99991", "delay time: 99828", "delay time: 99705", "delay time: 99547", "delay time: 99373", "delay time: 99241", "delay time: 99134", "delay time: 99012", "delay time: 98900", "delay time: 98781", "delay time: 98672", "-922337203685477s >= -30000s", "44 > 30", "-40582836962160988s >= -30000s", "-600000s >= -30000s", "5259 > 30", "-599703s >= -30000s", "-599530s >= -30000s", "-599367s >= -30000s", "-598716s >= -30000s", "-598474s >= -30000s", "-598328s >= -30000s", "-598218s >= -30000s", "-598108s >= -30000s", "-597995s >= -30000s", "4487 > 30", "-597890s >= -30000s", "-597763s >= -30000s", "-597547s >= -30000s", "-597417s >= -30000s", "-597203s >= -30000s", "-597075s >= -30000s", "-596962s >= -30000s", "-596844s >= -30000s", "-596733s >= -30000s", "-596624s >= -30000s", "-596420s >= -30000s", "-596188s >= -30000s", "-596044s >= -30000s", "-595913s >= -30000s", "-595788s >= -30000s", "-595600s >= -30000s", "-595436s >= -30000s", "-595223s >= -30000s", "-595098s >= -30000s", "-594975s >= -30000s", "-594844s >= -30000s", "-594734s >= -30000s", "-594620s >= -30000s", "-594488s >= -30000s", "-594360s >= -30000s", "-594211s >= -30000s", "-594091s >= -30000s", "-593968s >= -30000s", "-593858s >= -30000s", "-593750s >= -30000s", "-593641s >= -30000s", "-593531s >= -30000s", "-593417s >= -30000s", "-593297s >= -30000s", "-593162s >= -30000s", "-593042s >= -30000s", "-592922s >= -30000s", "-592812s >= -30000s", "-592696s >= -30000s", "-592578s >= -30000s", "-592460s >= -30000s", "-592254s >= -30000s", "-592099s >= -30000s", "-591965s >= -30000s", "-591391s >= -30000s", "-590860s >= -30000s", "-590703s >= -30000s", "-100000s >= -30000s", "-99991s >= -30000s", "-99828s >= -30000s", "-99705s >= -30000s", "-99547s >= -30000s", "-99373s >= -30000s", "-99241s >= -30000s", "-99134s >= -30000s", "-99012s >= -30000s", "-98900s >= -30000s", "-98781s >= -30000s", "-98672s >= -30000s", "delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "1080000 memory reserve | memory write watch", "2A60000 memory reserve | memory write watch", "4A60000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "75B0000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "AB50000 memory reserve | memory write watch", "1800000 memory reserve | memory write watch", "31E0000 memory reserve | memory write watch", "1870000 memory reserve | memory write watch"]}, {"severity": "INFO", "description": "Allocates memory with a write watch (potentially for evading sandboxes)", "match_data": ["delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "delay time: 100000", "delay time: 99991", "delay time: 99828", "delay time: 99705", "delay time: 99547", "delay time: 99373", "delay time: 99241", "delay time: 99134", "delay time: 99012", "delay time: 98900", "delay time: 98781", "delay time: 98672", "-922337203685477s >= -30000s", "44 > 30", "-40582836962160988s >= -30000s", "-600000s >= -30000s", "5259 > 30", "-599703s >= -30000s", "-599530s >= -30000s", "-599367s >= -30000s", "-598716s >= -30000s", "-598474s >= -30000s", "-598328s >= -30000s", "-598218s >= -30000s", "-598108s >= -30000s", "-597995s >= -30000s", "4487 > 30", "-597890s >= -30000s", "-597763s >= -30000s", "-597547s >= -30000s", "-597417s >= -30000s", "-597203s >= -30000s", "-597075s >= -30000s", "-596962s >= -30000s", "-596844s >= -30000s", "-596733s >= -30000s", "-596624s >= -30000s", "-596420s >= -30000s", "-596188s >= -30000s", "-596044s >= -30000s", "-595913s >= -30000s", "-595788s >= -30000s", "-595600s >= -30000s", "-595436s >= -30000s", "-595223s >= -30000s", "-595098s >= -30000s", "-594975s >= -30000s", "-594844s >= -30000s", "-594734s >= -30000s", "-594620s >= -30000s", "-594488s >= -30000s", "-594360s >= -30000s", "-594211s >= -30000s", "-594091s >= -30000s", "-593968s >= -30000s", "-593858s >= -30000s", "-593750s >= -30000s", "-593641s >= -30000s", "-593531s >= -30000s", "-593417s >= -30000s", "-593297s >= -30000s", "-593162s >= -30000s", "-593042s >= -30000s", "-592922s >= -30000s", "-592812s >= -30000s", "-592696s >= -30000s", "-592578s >= -30000s", "-592460s >= -30000s", "-592254s >= -30000s", "-592099s >= -30000s", "-591965s >= -30000s", "-591391s >= -30000s", "-590860s >= -30000s", "-590703s >= -30000s", "-100000s >= -30000s", "-99991s >= -30000s", "-99828s >= -30000s", "-99705s >= -30000s", "-99547s >= -30000s", "-99373s >= -30000s", "-99241s >= -30000s", "-99134s >= -30000s", "-99012s >= -30000s", "-98900s >= -30000s", "-98781s >= -30000s", "-98672s >= -30000s", "delay time: 922337203685477", "delay time: 600000", "delay time: 599703", "delay time: 599530", "delay time: 599367", "delay time: 598716", "delay time: 598474", "delay time: 598328", "delay time: 598218", "delay time: 598108", "delay time: 597995", "delay time: 597890", "delay time: 597763", "delay time: 597547", "delay time: 597417", "delay time: 597203", "delay time: 597075", "delay time: 596962", "delay time: 596844", "delay time: 596733", "delay time: 596624", "delay time: 596420", "delay time: 596188", "delay time: 596044", "delay time: 595913", "delay time: 595788", "delay time: 595600", "delay time: 595436", "delay time: 595223", "delay time: 595098", "delay time: 594975", "delay time: 594844", "delay time: 594734", "delay time: 594620", "delay time: 594488", "delay time: 594360", "delay time: 594211", "delay time: 594091", "delay time: 593968", "delay time: 593858", "delay time: 593750", "delay time: 593641", "delay time: 593531", "delay time: 593417", "delay time: 593297", "delay time: 593162", "delay time: 593042", "delay time: 592922", "delay time: 592812", "delay time: 592696", "delay time: 592578", "delay time: 592460", "delay time: 592254", "delay time: 592099", "delay time: 591965", "delay time: 591391", "delay time: 590860", "delay time: 590703", "1080000 memory reserve | memory write watch", "2A60000 memory reserve | memory write watch", "4A60000 memory reserve | memory write watch", "8B50000 memory reserve | memory write watch", "75B0000 memory reserve | memory write watch", "9B50000 memory reserve | memory write watch", "AB50000 memory reserve | memory write watch", "1800000 memory reserve | memory write watch", "31E0000 memory reserve | memory write watch", "1870000 memory reserve | memory write watch"]}]}, {"id": "T1518", "name": "Software Discovery", "link": "https://attack.mitre.org/techniques/T1518/", "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nSuch software may be deployed widely across the environment for configuration management or security reasons, such as Software Deployment Tools, and may allow adversaries broad access to infect devices or move laterally.\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to Exploitation for Privilege Escalation."}, {"id": "T1518.001", "name": "Security Software Discovery", "link": "https://attack.mitre.org/techniques/T1518/001/", "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from Security Software Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nExample commands that can be used to obtain security software information are netsh, reg query with Reg, dir with cmd, and Tasklist, but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\nAdversaries may also utilize the Cloud API to discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.", "signatures": [{"severity": "INFO", "description": "May try to detect the virtual machine to hinder analysis (VM artifact strings found in memory)", "match_data": ["Hyper-V RAW%SystemRoot%\\system32\\mswsock.dll"]}]}, {"id": "T1057", "name": "Process Discovery", "link": "https://attack.mitre.org/techniques/T1057/", "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from Process Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nIn Windows environments, adversaries could obtain details on running processes using the Tasklist utility via cmd or Get-Process via PowerShell. Information about processes can also be extracted from the output of Native API calls such as CreateToolhelp32Snapshot. In Mac and Linux, this is accomplished with the ps command. Adversaries may also opt to enumerate processes via /proc. \nOn network devices, Network Device CLI commands such as show processes can be used to display current running processes.", "signatures": [{"severity": "INFO", "description": "Queries a list of all running processes", "match_data": ["ProcessInformation"]}]}, {"id": "T1010", "name": "Application Window Discovery", "link": "https://attack.mitre.org/techniques/T1010/", "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used. For example, information about application windows could be used identify potential data to collect as well as identifying security tooling (Security Software Discovery) to evade.\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as Command and Scripting Interpreter commands and Native API functions.", "signatures": [{"severity": "INFO", "description": "Sample monitors Window changes (e.g. starting applications), analyze the sample with the simulation cookbook"}]}, {"id": "T1016", "name": "System Network Configuration Discovery", "link": "https://attack.mitre.org/techniques/T1016/", "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include Arp, ipconfig/ifconfig, nbtstat, and route.\nAdversaries may also leverage a Network Device CLI on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. show ip route, show ip interface).\nAdversaries may use the information from System Network Configuration Discovery during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ", "signatures": [{"severity": "LOW", "description": "Checks the online ip address of the machine", "match_data": ["name: checkip.dyndns.org", "name: reallyfreegeoip.org"]}]}, {"id": "T1082", "name": "System Information Discovery", "link": "https://attack.mitre.org/techniques/T1082/", "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from System Information Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\nTools such as Systeminfo can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the systemsetup configuration tool on macOS. As an example, adversaries with user-level access can execute the df -aH command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a Network Device CLI on network devices to gather detailed system information (e.g. show version). System Information Discovery combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.", "signatures": [{"severity": "INFO", "description": "Checks if Microsoft Office is installed", "match_data": ["HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\software.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Microsoft.VisualBasic\\v4.0_10.0.0.0__b03f5f7f11d50a3a\\Microsoft.VisualBasic.dll VolumeInformation", "C:\\Windows\\Fonts\\arial.ttf VolumeInformation", "C:\\Windows\\Fonts\\ariali.ttf VolumeInformation", "C:\\Windows\\Fonts\\arialbd.ttf VolumeInformation", "C:\\Windows\\Fonts\\arialbi.ttf VolumeInformation", "C:\\Windows\\Fonts\\ARIALN.TTF VolumeInformation", "C:\\Windows\\Fonts\\ariblk.ttf VolumeInformation", "C:\\Windows\\Fonts\\ARIALNI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARIALNB.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARIALNBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\bahnschrift.ttf VolumeInformation", "C:\\Windows\\Fonts\\calibril.ttf VolumeInformation", "C:\\Windows\\Fonts\\calibrili.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambria.ttc VolumeInformation", "C:\\Windows\\Fonts\\cambriai.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambriab.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambriaz.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candara.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candaral.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candarai.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candarali.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Italic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-BoldItalic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Alef-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Alef-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Italic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf VolumeInformation", "C:\\Windows\\Fonts\\BKANT.TTF VolumeInformation", "C:\\Windows\\Fonts\\ANTQUAB.TTF VolumeInformation", "C:\\Windows\\Fonts\\ANTQUABI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ALGER.TTF VolumeInformation", "C:\\Windows\\Fonts\\BASKVILL.TTF VolumeInformation", "C:\\Windows\\Fonts\\BAUHS93.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELL.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELLI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELLB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSDB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BERNHC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_PSTC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRITANIC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BROADW.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRUSHSCI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFR.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFB.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIST.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTB.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOS.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_R.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_I.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_B.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BLAR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BLAI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ITCBLKAD.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARLRDBD.TTF VolumeInformation", "C:\\Windows\\Fonts\\AGENCYR.TTF VolumeInformation", "C:\\Windows\\Fonts\\AGENCYB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BSSYM7.TTF VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Security\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Security.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Web.Extensions\\v4.0_4.0.0.0__31bf3856ad364e35\\System.Web.Extensions.dll VolumeInformation"]}, {"severity": "INFO", "description": "Queries the cryptographic machine GUID", "match_data": ["HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\software.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Microsoft.VisualBasic\\v4.0_10.0.0.0__b03f5f7f11d50a3a\\Microsoft.VisualBasic.dll VolumeInformation", "C:\\Windows\\Fonts\\arial.ttf VolumeInformation", "C:\\Windows\\Fonts\\ariali.ttf VolumeInformation", "C:\\Windows\\Fonts\\arialbd.ttf VolumeInformation", "C:\\Windows\\Fonts\\arialbi.ttf VolumeInformation", "C:\\Windows\\Fonts\\ARIALN.TTF VolumeInformation", "C:\\Windows\\Fonts\\ariblk.ttf VolumeInformation", "C:\\Windows\\Fonts\\ARIALNI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARIALNB.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARIALNBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\bahnschrift.ttf VolumeInformation", "C:\\Windows\\Fonts\\calibril.ttf VolumeInformation", "C:\\Windows\\Fonts\\calibrili.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambria.ttc VolumeInformation", "C:\\Windows\\Fonts\\cambriai.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambriab.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambriaz.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candara.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candaral.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candarai.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candarali.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Italic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-BoldItalic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Alef-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Alef-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Italic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf VolumeInformation", "C:\\Windows\\Fonts\\BKANT.TTF VolumeInformation", "C:\\Windows\\Fonts\\ANTQUAB.TTF VolumeInformation", "C:\\Windows\\Fonts\\ANTQUABI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ALGER.TTF VolumeInformation", "C:\\Windows\\Fonts\\BASKVILL.TTF VolumeInformation", "C:\\Windows\\Fonts\\BAUHS93.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELL.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELLI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELLB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSDB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BERNHC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_PSTC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRITANIC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BROADW.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRUSHSCI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFR.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFB.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIST.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTB.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOS.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_R.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_I.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_B.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BLAR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BLAI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ITCBLKAD.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARLRDBD.TTF VolumeInformation", "C:\\Windows\\Fonts\\AGENCYR.TTF VolumeInformation", "C:\\Windows\\Fonts\\AGENCYB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BSSYM7.TTF VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Security\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Security.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Web.Extensions\\v4.0_4.0.0.0__31bf3856ad364e35\\System.Web.Extensions.dll VolumeInformation"]}, {"severity": "INFO", "description": "Reads software policies", "match_data": ["HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\software.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Microsoft.VisualBasic\\v4.0_10.0.0.0__b03f5f7f11d50a3a\\Microsoft.VisualBasic.dll VolumeInformation", "C:\\Windows\\Fonts\\arial.ttf VolumeInformation", "C:\\Windows\\Fonts\\ariali.ttf VolumeInformation", "C:\\Windows\\Fonts\\arialbd.ttf VolumeInformation", "C:\\Windows\\Fonts\\arialbi.ttf VolumeInformation", "C:\\Windows\\Fonts\\ARIALN.TTF VolumeInformation", "C:\\Windows\\Fonts\\ariblk.ttf VolumeInformation", "C:\\Windows\\Fonts\\ARIALNI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARIALNB.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARIALNBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\bahnschrift.ttf VolumeInformation", "C:\\Windows\\Fonts\\calibril.ttf VolumeInformation", "C:\\Windows\\Fonts\\calibrili.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambria.ttc VolumeInformation", "C:\\Windows\\Fonts\\cambriai.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambriab.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambriaz.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candara.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candaral.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candarai.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candarali.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Italic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-BoldItalic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Alef-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Alef-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Italic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf VolumeInformation", "C:\\Windows\\Fonts\\BKANT.TTF VolumeInformation", "C:\\Windows\\Fonts\\ANTQUAB.TTF VolumeInformation", "C:\\Windows\\Fonts\\ANTQUABI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ALGER.TTF VolumeInformation", "C:\\Windows\\Fonts\\BASKVILL.TTF VolumeInformation", "C:\\Windows\\Fonts\\BAUHS93.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELL.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELLI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELLB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSDB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BERNHC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_PSTC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRITANIC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BROADW.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRUSHSCI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFR.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFB.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIST.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTB.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOS.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_R.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_I.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_B.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BLAR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BLAI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ITCBLKAD.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARLRDBD.TTF VolumeInformation", "C:\\Windows\\Fonts\\AGENCYR.TTF VolumeInformation", "C:\\Windows\\Fonts\\AGENCYB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BSSYM7.TTF VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Security\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Security.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Web.Extensions\\v4.0_4.0.0.0__31bf3856ad364e35\\System.Web.Extensions.dll VolumeInformation"]}, {"severity": "INFO", "description": "Queries the volume information (name, serial number etc) of a device", "match_data": ["HKEY_CURRENT_USER\\Software\\Microsoft\\Office\\15.0\\Outlook\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676", "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography MachineGuid", "HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\Windows\\Safer\\CodeIdentifiers", "C:\\Users\\user\\Desktop\\software.exe VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\Microsoft.VisualBasic\\v4.0_10.0.0.0__b03f5f7f11d50a3a\\Microsoft.VisualBasic.dll VolumeInformation", "C:\\Windows\\Fonts\\arial.ttf VolumeInformation", "C:\\Windows\\Fonts\\ariali.ttf VolumeInformation", "C:\\Windows\\Fonts\\arialbd.ttf VolumeInformation", "C:\\Windows\\Fonts\\arialbi.ttf VolumeInformation", "C:\\Windows\\Fonts\\ARIALN.TTF VolumeInformation", "C:\\Windows\\Fonts\\ariblk.ttf VolumeInformation", "C:\\Windows\\Fonts\\ARIALNI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARIALNB.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARIALNBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\bahnschrift.ttf VolumeInformation", "C:\\Windows\\Fonts\\calibril.ttf VolumeInformation", "C:\\Windows\\Fonts\\calibrili.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambria.ttc VolumeInformation", "C:\\Windows\\Fonts\\cambriai.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambriab.ttf VolumeInformation", "C:\\Windows\\Fonts\\cambriaz.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candara.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candaral.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candarai.ttf VolumeInformation", "C:\\Windows\\Fonts\\Candarali.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Italic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Amiri-BoldItalic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Alef-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Alef-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Regular.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Italic.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-Bold.ttf VolumeInformation", "C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf VolumeInformation", "C:\\Windows\\Fonts\\BKANT.TTF VolumeInformation", "C:\\Windows\\Fonts\\ANTQUAB.TTF VolumeInformation", "C:\\Windows\\Fonts\\ANTQUABI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ALGER.TTF VolumeInformation", "C:\\Windows\\Fonts\\BASKVILL.TTF VolumeInformation", "C:\\Windows\\Fonts\\BAUHS93.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELL.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELLI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BELLB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSDB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRLNSB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BERNHC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_PSTC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRITANIC.TTF VolumeInformation", "C:\\Windows\\Fonts\\BROADW.TTF VolumeInformation", "C:\\Windows\\Fonts\\BRUSHSCI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFR.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIFB.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALIST.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTI.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTB.TTF VolumeInformation", "C:\\Windows\\Fonts\\CALISTBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOS.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOOKOSBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_R.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_I.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_B.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BLAR.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_BLAI.TTF VolumeInformation", "C:\\Windows\\Fonts\\BOD_CBI.TTF VolumeInformation", "C:\\Windows\\Fonts\\ITCBLKAD.TTF VolumeInformation", "C:\\Windows\\Fonts\\ARLRDBD.TTF VolumeInformation", "C:\\Windows\\Fonts\\AGENCYR.TTF VolumeInformation", "C:\\Windows\\Fonts\\AGENCYB.TTF VolumeInformation", "C:\\Windows\\Fonts\\BSSYM7.TTF VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Security\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Security.dll VolumeInformation", "C:\\Windows\\Microsoft.NET\\assembly\\GAC_MSIL\\System.Web.Extensions\\v4.0_4.0.0.0__31bf3856ad364e35\\System.Web.Extensions.dll VolumeInformation"]}]}]}, {"id": "TA0006", "name": "Credential Access", "link": "https://attack.mitre.org/tactics/TA0006/", "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.", "techniques": [{"id": "T1003", "name": "OS Credential Dumping", "link": "https://attack.mitre.org/techniques/T1003/", "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures. Credentials can then be used to perform Lateral Movement and access restricted information.\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.", "signatures": [{"severity": "LOW", "description": "Tries to harvest and steal browser information (history, passwords, etc)", "match_data": ["C:\\Users\\user\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\Login Data", "C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data"]}]}]}, {"id": "TA0009", "name": "Collection", "link": "https://attack.mitre.org/tactics/TA0009/", "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to either steal (exfiltrate) the data or to use the data to gain more information about the target environment. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.", "techniques": [{"id": "T1114", "name": "Email Collection", "link": "https://attack.mitre.org/techniques/T1114/", "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Emails may also contain details of ongoing incident response operations, which may allow adversaries to adjust their techniques in order to maintain persistence or evade defenses. Adversaries can collect or forward email from mail servers or clients. ", "signatures": [{"severity": "LOW", "description": "Tries to search for mail accounts", "match_data": ["C:\\Users\\user\\AppData\\Roaming\\PostboxApp\\Profiles\\", "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows Messaging Subsystem\\Profiles\\Outlook\\9375CFF0413111d3B88A00104B2A6676"]}]}, {"id": "T1005", "name": "Data from Local System", "link": "https://attack.mitre.org/techniques/T1005/", "description": "Adversaries may search local system sources, such as file systems and configuration files or local databases, to find files of interest and sensitive data prior to Exfiltration.\nAdversaries may do this using a Command and Scripting Interpreter, such as cmd as well as a Network Device CLI, which have functionality to interact with the file system to gather information. Adversaries may also use Automated Collection on the local system.", "signatures": [{"severity": "LOW", "description": "Tries to harvest and steal browser information (history, passwords, etc)", "match_data": ["C:\\Users\\user\\AppData\\Local\\Microsoft\\Edge\\User Data\\Default\\Login Data", "C:\\Users\\user\\AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data"]}]}]}, {"id": "TA0011", "name": "Command and Control", "link": "https://attack.mitre.org/tactics/TA0011/", "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.", "techniques": [{"id": "T1573", "name": "Encrypted Channel", "link": "https://attack.mitre.org/techniques/T1573/", "description": "Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.", "signatures": [{"severity": "INFO", "description": "Uses HTTPS", "match_data": ["HTTP traffic on port 443 -> 49687", "HTTP traffic on port 443 -> 49685", "HTTP traffic on port 443 -> 49696", "HTTP traffic on port 49694 -> 443", "HTTP traffic on port 443 -> 49694", "HTTP traffic on port 49696 -> 443", "HTTP traffic on port 443 -> 49692", "HTTP traffic on port 49692 -> 443", "HTTP traffic on port 443 -> 49690", "HTTP traffic on port 49685 -> 443", "HTTP traffic on port 49690 -> 443", "HTTP traffic on port 49687 -> 443"]}, {"severity": "INFO", "description": "Uses HTTPS for network communication, use the SSL MITM Proxy cookbook for further analysis", "match_data": ["HTTP traffic on port 443 -> 49687", "HTTP traffic on port 443 -> 49685", "HTTP traffic on port 443 -> 49696", "HTTP traffic on port 49694 -> 443", "HTTP traffic on port 443 -> 49694", "HTTP traffic on port 49696 -> 443", "HTTP traffic on port 443 -> 49692", "HTTP traffic on port 49692 -> 443", "HTTP traffic on port 443 -> 49690", "HTTP traffic on port 49685 -> 443", "HTTP traffic on port 49690 -> 443", "HTTP traffic on port 49687 -> 443"]}]}, {"id": "T1571", "name": "Non-Standard Port", "link": "https://attack.mitre.org/techniques/T1571/", "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088 or port 587 as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.", "signatures": [{"severity": "INFO", "description": "Detected TCP or UDP traffic on non-standard ports", "match_data": ["192.168.122.101:49699 -> 92.205.2.170:587"]}]}, {"id": "T1105", "name": "Ingress Tool Transfer", "link": "https://attack.mitre.org/techniques/T1105/", "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as ftp. Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. Lateral Tool Transfer). \nOn Windows, adversaries may use various utilities to download tools, such as copy, finger, certutil, and PowerShell commands such as IEX(New-Object Net.WebClient).downloadString() and Invoke-WebRequest. On Linux and macOS systems, a variety of utilities also exist, such as curl, scp, sftp, tftp, rsync, finger, and wget.\nAdversaries may also abuse installers and package managers, such as yum or winget, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows search-ms protocol handler, to deliver malicious files to victims through remote file searches invoked by User Execution (typically after interacting with Phishing lures).\nFiles can also be transferred using various Web Services as well as native or otherwise present tools on the victim system. In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.", "signatures": [{"severity": "INFO", "description": "Downloads files from webservers via HTTP", "match_data": ["GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org"]}]}, {"id": "T1095", "name": "Non-Application Layer Protocol", "link": "https://attack.mitre.org/techniques/T1095/", "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive. Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\nICMP communication between hosts is one example. Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts. However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.", "signatures": [{"severity": "INFO", "description": "Downloads files from webservers via HTTP", "match_data": ["GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "DNS query: checkip.dyndns.org", "DNS query: reallyfreegeoip.org", "DNS query: mail.ujexchange.com"]}, {"severity": "INFO", "description": "Performs DNS lookups", "match_data": ["GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "DNS query: checkip.dyndns.org", "DNS query: reallyfreegeoip.org", "DNS query: mail.ujexchange.com"]}]}, {"id": "T1071", "name": "Application Layer Protocol", "link": "https://attack.mitre.org/techniques/T1071/", "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, DNS, or publishing/subscribing. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP. ", "signatures": [{"severity": "INFO", "description": "Uses a known web browser user agent for HTTP communication", "match_data": ["GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "192.168.122.101:49699 -> 92.205.2.170:587", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "DNS query: checkip.dyndns.org", "DNS query: reallyfreegeoip.org", "DNS query: mail.ujexchange.com", "HTTP traffic on port 443 -> 49687", "HTTP traffic on port 443 -> 49685", "HTTP traffic on port 443 -> 49696", "HTTP traffic on port 49694 -> 443", "HTTP traffic on port 443 -> 49694", "HTTP traffic on port 49696 -> 443", "HTTP traffic on port 443 -> 49692", "HTTP traffic on port 49692 -> 443", "HTTP traffic on port 443 -> 49690", "HTTP traffic on port 49685 -> 443", "HTTP traffic on port 49690 -> 443", "HTTP traffic on port 49687 -> 443"]}, {"severity": "INFO", "description": "Uses SMTP (mail sending)", "match_data": ["GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "192.168.122.101:49699 -> 92.205.2.170:587", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "DNS query: checkip.dyndns.org", "DNS query: reallyfreegeoip.org", "DNS query: mail.ujexchange.com", "HTTP traffic on port 443 -> 49687", "HTTP traffic on port 443 -> 49685", "HTTP traffic on port 443 -> 49696", "HTTP traffic on port 49694 -> 443", "HTTP traffic on port 443 -> 49694", "HTTP traffic on port 49696 -> 443", "HTTP traffic on port 443 -> 49692", "HTTP traffic on port 49692 -> 443", "HTTP traffic on port 443 -> 49690", "HTTP traffic on port 49685 -> 443", "HTTP traffic on port 49690 -> 443", "HTTP traffic on port 49687 -> 443"]}, {"severity": "INFO", "description": "Downloads files from webservers via HTTP", "match_data": ["GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "192.168.122.101:49699 -> 92.205.2.170:587", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "DNS query: checkip.dyndns.org", "DNS query: reallyfreegeoip.org", "DNS query: mail.ujexchange.com", "HTTP traffic on port 443 -> 49687", "HTTP traffic on port 443 -> 49685", "HTTP traffic on port 443 -> 49696", "HTTP traffic on port 49694 -> 443", "HTTP traffic on port 443 -> 49694", "HTTP traffic on port 49696 -> 443", "HTTP traffic on port 443 -> 49692", "HTTP traffic on port 49692 -> 443", "HTTP traffic on port 443 -> 49690", "HTTP traffic on port 49685 -> 443", "HTTP traffic on port 49690 -> 443", "HTTP traffic on port 49687 -> 443"]}, {"severity": "INFO", "description": "Performs DNS lookups", "match_data": ["GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "192.168.122.101:49699 -> 92.205.2.170:587", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "DNS query: checkip.dyndns.org", "DNS query: reallyfreegeoip.org", "DNS query: mail.ujexchange.com", "HTTP traffic on port 443 -> 49687", "HTTP traffic on port 443 -> 49685", "HTTP traffic on port 443 -> 49696", "HTTP traffic on port 49694 -> 443", "HTTP traffic on port 443 -> 49694", "HTTP traffic on port 49696 -> 443", "HTTP traffic on port 443 -> 49692", "HTTP traffic on port 49692 -> 443", "HTTP traffic on port 443 -> 49690", "HTTP traffic on port 49685 -> 443", "HTTP traffic on port 49690 -> 443", "HTTP traffic on port 49687 -> 443"]}, {"severity": "INFO", "description": "Uses HTTPS", "match_data": ["GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "192.168.122.101:49699 -> 92.205.2.170:587", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.orgConnection: Keep-Alive", "GET / HTTP/1.1User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.2; .NET CLR1.0.3705;)Host: checkip.dyndns.org", "DNS query: checkip.dyndns.org", "DNS query: reallyfreegeoip.org", "DNS query: mail.ujexchange.com", "HTTP traffic on port 443 -> 49687", "HTTP traffic on port 443 -> 49685", "HTTP traffic on port 443 -> 49696", "HTTP traffic on port 49694 -> 443", "HTTP traffic on port 443 -> 49694", "HTTP traffic on port 49696 -> 443", "HTTP traffic on port 443 -> 49692", "HTTP traffic on port 49692 -> 443", "HTTP traffic on port 443 -> 49690", "HTTP traffic on port 49685 -> 443", "HTTP traffic on port 49690 -> 443", "HTTP traffic on port 49687 -> 443"]}]}]}]}}, "links": {"self": "https://www.virustotal.com/api/v3/files/40bb0111fde0b193b7c09dd41f9434bd9c866a3b8963e5bdfef949a1705e22ba/behaviour_mitre_trees"}}